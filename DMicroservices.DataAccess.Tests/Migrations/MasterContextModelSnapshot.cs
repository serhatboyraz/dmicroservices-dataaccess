// <auto-generated />
using System;
using DMicroservices.DataAccess.Tests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DMicroservices.DataAccess.Tests.Migrations
{
    [DbContext(typeof(MasterContext))]
    partial class MasterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("DMicroservices.DataAccess.Tests.Models.ClassModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Class","school");
                });

            modelBuilder.Entity("DMicroservices.DataAccess.Tests.Models.DocumentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Document","school");
                });

            modelBuilder.Entity("DMicroservices.DataAccess.Tests.Models.StudentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ClassModelId");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("ClassModelId");

                    b.ToTable("Student","person");
                });

            modelBuilder.Entity("DMicroservices.DataAccess.Tests.Models.TeacherModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Teacher","person");
                });

            modelBuilder.Entity("DMicroservices.DataAccess.Tests.Models.StudentModel", b =>
                {
                    b.HasOne("DMicroservices.DataAccess.Tests.Models.ClassModel")
                        .WithMany("Students")
                        .HasForeignKey("ClassModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
